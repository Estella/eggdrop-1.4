dnl Process this file with autoconf to produce a configure script.
AC_INIT(eggdrop.conf.dist)
ac_default_prefix=\${HOME}/eggdrop
AC_CONFIG_HEADER(config.h)

AC_MSG_RESULT()
AC_MSG_RESULT(This is eggdrop's GNU configure script.)
AC_MSG_RESULT(It's going to run a bunch of strange tests to hopefully)
AC_MSG_RESULT(make your compile work without much twiddling.)
AC_MSG_RESULT()

AC_PROG_MAKE_SET
AC_PROG_CC

dnl no cross-compiling!
if test ! "x${cross_compiling}" = "xno"
then
  cat << 'EOF' >&2
configure: error:

  This system does not appear to have a working C compiler.
  A working C compiler is required to compile eggdrop.

EOF
  exit 1
fi

dnl crazy machines
AC_AIX
AC_ISC_POSIX
AC_MINIX

dnl Checks for programs.
AC_PROG_RANLIB
AC_CHECK_PROG(STRIP,strip,strip)
AC_CHECK_PROG(UNAME,uname,uname)

AC_PROG_AWK
if test "x${AWK}" = "x"
then
  cat << 'EOF' >&2
configure: error:

  This system seems to lack a working 'awk' command.
  A working 'awk' command is required to compile eggdrop.

EOF
  exit 1
fi

AC_CHECK_PROG(BASENAME,basename,basename)
if test "x${BASENAME}" = "x"
then
  cat << 'EOF' >&2
configure: error:

  This system seems to lack a working 'basename' command.
  A working 'basename' command is required to compile eggdrop.

EOF
  exit 1
fi

AC_CHECK_PROG(DIRNAME,dirname,dirname)
if test "x${DIRNAME}" = "x"
then
  cat << 'EOF' >&2
configure: error:

  This system seems to lack a working 'dirname' command.
  A working 'dirname' command is required to compile eggdrop.

EOF
  exit 1
fi

AC_PROG_LN_S

dnl cp -f checks
AC_MSG_CHECKING(whether cp -f works)
ac_file1=beldin1
ac_file2=beldin2
ac_cp="cp -f $ac_file1 $ac_file2"

cat > $ac_file1 << 'EOF'
Beldin is a llama.  :P
EOF
if { (eval echo configure: \"$ac_cp\") 1>&5; (eval $ac_cp) 2>&5; } && test -s $ac_file2
then
  AC_MSG_RESULT(yes)
  ac_cv_prog_cp_f=yes
  CP1="cp -f"
  CP2="cp -rf"
  CP3="cp -pf"
else
  AC_MSG_RESULT(no)
  ac_cv_prog_cp_f=no
  CP1="cp"
  CP2="cp -r"
  CP3="cp -p"
fi
rm -f $ac_file1 $ac_file2

dnl stop putting -g in there!  @#$!#$%!
if test "x${CFLAGS}" = "x"
then
  if test "x${CC}" = "xgcc"
  then
    CFLAGS="-O2"
  else
    CFLAGS="-O"
  fi
fi

dnl test the os and set the module linking settings
if test "x${STRIP}" = "x"
then
  STRIP=touch
fi
IRIX=no
LINUX=no
need_dl=1
EGGEXEC=eggdrop
DEFAULT_MAKE=eggdrop
BEL_MOD_CC="${CC}"
BEL_MOD_LD="${CC}"
BEL_MOD_STRIP="${STRIP}"
SHLIB_CC="${CC}"
SHLIB_LD="${CC}"
SHLIB_STRIP="${STRIP}"
AC_MSG_CHECKING(your OS)
system=`${UNAME}`
case $system in
  Linux)
    CFLAGS="$CFLAGS -Wall"
    AC_MSG_RESULT(Linux! The choice of the GNU generation)
    SHLIB_LD="${CC} -shared -nostartfiles"
    BEL_MOD_LD="${CC}"
    AC_DEFINE(MODULES_OK)
    LINUX=yes
    DEFAULT_MAKE=debugmem
    ;;
  BSD/OS)
    if test "x`${UNAME} -r | cut -d . -f 1`" = "x2"
    then
      AC_MSG_RESULT(BSD/OS 2! statically linked modules are the only choice)
      need_dl=0
      DEFAULT_MAKE=static
    else
      AC_MSG_RESULT(BSD/OS 3+! ok I spose)
      BEL_MOD_CC=shlicc
      BEL_MOD_LD=shlicc
      BEL_MOD_STRIP="${STRIP} -d"
      SHLIB_LD="shlicc -r"
      SHLIB_STRIP=touch
      AC_DEFINE(MODULES_OK)
    fi
    AC_CHECK_PROG(GMAKE,gmake,gmake)
    if test "x${GMAKE}" = "x"
    then
      cat << 'EOF' >&2
configure: warning:

  Yoicks! You have BSD/OS and you dont have 'gmake'.
  You may not be able to compile the bot successfully :(

EOF
    fi
    ;;
  *BSD)
    AC_MSG_RESULT(FreeBSD/NetBSD/OpenBSD - choose your poison)
    SHLIB_CC="${CC} -fpic"
    SHLIB_LD="ld -Bshareable -x"
    AC_DEFINE(MODULES_OK)
    ;;
  SunOS)
    if test "x`${UNAME} -r | cut -d . -f 1`" = "x5"
    then
      AC_MSG_RESULT(Solaris!)
      SHLIB_LD="/usr/ccs/bin/ld -G -z text"
    else
      AC_MSG_RESULT(SunOS 4 :/)
      SHLIB_LD=ld
      SHLIB_STRIP=touch
    fi
    SHLIB_CC="${CC} -fPIC"
    BEL_MOD_CC="${CC} -fPIC"
    AC_DEFINE(MODULES_OK)
    ;;
  OSF1)
    AC_MSG_RESULT(OSF...)
    case `${UNAME} -r | cut -d . -f 1` in
      V*)
	AC_MSG_RESULT(Digital OSF)
	SHLIB_LD="ld -shared -expect_unresolved '*'"
	SHLIB_STRIP="touch"
	AC_DEFINE(MODULES_OK)
	;;
      1.0|1.1|1.2)
	AC_MSG_RESULT(pre 1.3)
	SHLIB_LD="ld -R -export $@:"
	AC_DEFINE(OSF1_HACKS)
	AC_DEFINE(MODULES_OK)
	;;
      1.*)
	AC_MSG_RESULT(1.3+)
	SHLIB_CFL="${CC} -fpic"
	SHLIB_LD="ld -shared"
	AC_DEFINE(OSF1_HACKS)
	AC_DEFINE(MODULES_OK)
	;;
      *)
	AC_MSG_RESULT(Some other weird OSF! No modules for you..)
	need_dl=0
	DEFAULT_MAKE=static
	;;
    esac
    AC_DEFINE(STOP_UAC)
    ;;
  HP-UX)
    AC_MSG_RESULT([HP-UX, just shoot yourself now])
    AC_CHECK_LIB(dld,shl_load)
    BEL_MOD_LD="gcc -Wl,-E"
    SHLIB_CC="gcc -fPIC"
    SHLIB_LD="ld -b"
    AC_DEFINE(HPUX_HACKS)
    if test "x`${UNAME} -r | cut -d . -f 2`" = "x10"
    then
       AC_DEFINE(HPUX10_HACKS)
    fi
    AC_DEFINE(MODULES_OK)
    need_dl=0
    ;;
  IRIX|IRIX64)
    AC_MSG_RESULT(you are cursed with IRIX)
    IRIX=yes
    SHLIB_STRIP=touch
    need_dl=0
    DEFAULT_MAKE=static
    ;;
  *)
    if test -r "/mach"
    then
      AC_MSG_RESULT([NeXT...We are borg, you will be assimilated])
      AC_MSG_RESULT([break out the static modules, it's all you'll ever get :P])
      AC_MSG_RESULT(Hiya DK :P)
      AC_DEFINE(BORGCUBES)
    else
      AC_MSG_RESULT(Something unknown!!)
      AC_MSG_RESULT([If you get dynamic modules to work, be sure to let the devel team know HOW :)])
    fi
    need_dl=0
    DEFAULT_MAKE=static
    ;;
esac

dnl Check for Sun libraries.
if test "$IRIX" = "yes"
then
  AC_MSG_WARN(Skipping library tests because they *confuse* IRIX.)
else
  AC_CHECK_LIB(socket,socket)
  AC_CHECK_LIB(nsl,connect)
  AC_CHECK_LIB(dns,gethostbyname)
  AC_CHECK_LIB(dl,dlopen)
  if test "x`${UNAME}`" = "xSunOS"
  then
    AC_MSG_CHECKING(for SunOS 4)
    if test "x`${UNAME} -r | cut -d . -f 1`" = "x5"
    then
      AC_MSG_RESULT(Solaris -- "*bollocks*" zarni )
    else
      AC_MSG_RESULT(SunOS -- sigh)
      dnl for suns without yp or something like that:
      AC_CHECK_LIB(dl,main)
    fi
  fi
fi

AC_C_BIGENDIAN
AC_CHECK_SIZEOF(long,0)
AC_CHECK_SIZEOF(int,0)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(sys/time.h sys/select.h sys/rusage.h unistd.h stdarg.h dlfcn.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_PID_T
AC_HEADER_TIME
AC_C_INLINE

dnl Checks for library functions.
AC_CHECK_FUNCS(rename getrusage getdtablesize srandom random sigaction)
AC_CHECK_FUNCS(sigemptyset vsprintf strcasecmp setpgid clock dlopen)
AC_CHECK_FUNCS(dprintf bzero uname vsnprintf)

if test "x${ac_cv_func_vsprintf}" = "xno"
then
  cat << 'EOF' >&2
configure: error:

  Your system does not have the sprintf/vsprintf libraries.
  These are required to compile almost anything.  Sorry.

EOF
  exit 1
fi

if test "x${ac_cv_header_stdc}" = "xno"
then
  cat << 'EOF' >&2
configure: error:

  Your system must support ANSI C Header files.
  These are required for the language support.  Sorry.

EOF
  exit 1
fi

dnl check how much space is left in filedb (informational purposes)
AC_MSG_CHECKING(space left in file database struct)
cat > abacab.c << 'EOF'
#include <stdio.h>
#include <sys/time.h>
#include "src/mod/filesys.mod/files.h"
main() {
  fprintf(stdout, "%d/%d", 512-sizeof(struct filler), sizeof(filedb));
}
EOF
${CC} -o abacab abacab.c
FILEDB_SPACE=`./abacab`
AC_MSG_RESULT($FILEDB_SPACE bytes)
rm -f abacab abacab.o abacab.c
AC_MSG_RESULT([   (standard is currently 48/512 bytes)])

dnl where is tcl?  is it here?
# ---------- begin robey's tcl thingies
# (well, what used to be robey's tcl thingies...)

tclversions="8.3 8.2 8.1 8.0 7.6 7.5"

tcllibnames="tcl tcl8.3 tcl83 tcl8.2 tcl82 tcl8.1 tcl81 \
	tcl8.0 tcl80 tcl7.6 tcl76 tcl7.5 tcl75"

tcllibextensions=".so .so.1 .so.1.0 .so.1.2 .a"

tclheadernames="tcl.h"

tcllibpaths="/usr/local/lib /usr/local/pkgs/tcl/lib \
	/usr/lib /lib /usr/i486-linuxaout/lib \
	$HOME/lib $HOME/tcl/lib $HOME"

tclheaderpaths="/usr/local/include /usr/local/pkgs/tcl/include \
	/usr/include $HOME/include $HOME/tcl/include $HOME"

dnl oohh new configure --variables for those with multiple tcl libs
AC_ARG_WITH(tcllib, [  --with-tcllib=PATH      full path to tcl library], tcllibname=$withval)
AC_ARG_WITH(tclinc, [  --with-tclinc=PATH      full path to tcl header], tclincname=$withval)

# make sure either both or neither $tcllibname and $tclincname are set
if test ! "x${tcllibname}" = "x"
then
  if test "x${tclincname}" = "x"
  then
    cat << 'EOF' >&2
configure: warning:

  You must specify both --with-tcllib and --with-tclinc for them to work.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    tcllibname=""
    TCLLIB=""
    TCLINC=""
  fi
else
  if test ! "x${tclincname}" = "x"
  then
    cat << 'EOF' >&2
configure: warning:

  You must specify both --with-tcllib and --with-tclinc for them to work.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    tclincname=""
    TCLLIB=""
    TCLINC=""
  fi
fi

# make sure either both or neither $TCLLIB and $TCLINC are set
if test ! "x${TCLLIB}" = "x"
then
  if test "x${TCLINC}" = "x"
  then
    cat << 'EOF' >&2
configure: warning:

  Environment variable TCLLIB was set, but I did not detect TCLINC.
  Please set both TCLLIB and TCLINC correctly if you wish to use them.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    TCLLIB=""
  fi
else
  if test ! "x${TCLINC}" = "x"
  then
    cat << 'EOF' >&2
configure: warning:

  Environment variable TCLINC was set, but I did not detect TCLLIB.
  Please set both TCLLIB and TCLINC correctly if you wish to use them.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    TCLINC=""
  fi
fi

# look for $TCLLIBFN: if $tcllibname is set, check there first
if test ! "x${tcllibname}" = "x"
then
  if test -f "$tcllibname" && test -r "$tcllibname"
  then
    TCLLIB=`$DIRNAME $tcllibname`
    TCLLIBEXT=".`echo $tcllibname | $AWK '{j=split($1, i, "."); k=i[[j]]; print k}'`"
    TCLLIBFN=`$BASENAME $tcllibname $TCLLIBEXT | cut -c4-`
  else
    cat << 'EOF' >&2
configure: warning:

  The filename given to option --with-tcllib is not valid.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    tclincname=""
  fi
fi

# look for $TCLINCFN: if $tclincname is set, check there first
if test ! "x${tclincname}" = "x"
then
  if test -f "$tclincname" && test -r "$tclincname"
  then
    TCLINC=`$DIRNAME $tclincname`
    TCLINCFN=`$BASENAME $tclincname`
  else
    cat << 'EOF' >&2
configure: warning:

  The filename given to option --with-tclinc is not valid.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    TCLLIB=""
    TCLLIBFN=""
  fi
fi

# look for $TCLLIBFN: if $TCLLIB is set, check there first
if test ! "x${TCLLIB}" = "x"
then
  if test -d "${TCLLIB}"
  then
    for tcllibfn in $tcllibnames
    do
      for tcllibext in $tcllibextensions
      do
	if test -r "$TCLLIB/lib$tcllibfn$tcllibext"
	then
	  TCLLIBFN=$tcllibfn
	  TCLLIBEXT=$tcllibext
	  break 2
	fi
      done
    done
  fi
  if test "x${TCLLIBFN}" = "x"
  then
    cat << 'EOF' >&2
configure: warning:

  Environment variable TCLLIB was set, but incorrect.
  Please set both TCLLIB and TCLINC correctly if you wish to use them.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    TCLLIB=""
    TCLLIBFN=""
    TCLINC=""
    TCLINCFN=""
  fi
fi

# look for $TCLINCFN: if $TCLINC is set, check there first
if test ! "x${TCLINC}" = "x"
then
  if test -d "${TCLINC}"
  then
    for tclheaderfn in $tclheadernames
    do
      if test -r "$TCLINC/$tclheaderfn"
      then
	TCLINCFN=$tclheaderfn
      fi
    done
  fi
  if test "x${TCLINCFN}" = "x"
  then
    cat << 'EOF' >&2
configure: warning:

  Environment variable TCLINC was set, but incorrect.
  Please set both TCLLIB and TCLINC correctly if you wish to use them.
  configure will now attempt to autodetect both the Tcl library and header...

EOF
    TCLLIB=""
    TCLLIBFN=""
    TCLINC=""
    TCLINCFN=""
  fi
fi

AC_MSG_CHECKING(for Tcl library)

# attempt autodetect for $TCLLIBFN if not set
if test ! "x${TCLLIBFN}" = "x"
then
  AC_MSG_RESULT(using $TCLLIB/lib$TCLLIBFN$TCLLIBEXT)
else
  for tcllibfn in $tcllibnames
  do
    for tcllibext in $tcllibextensions
    do
      for tcllibpath in $tcllibpaths
      do
	if test -r "$tcllibpath/lib$tcllibfn$tcllibext"
	then
	  AC_MSG_RESULT(found $tcllibpath/lib$tcllibfn$tcllibext)
	  TCLLIB=$tcllibpath
	  TCLLIBFN=$tcllibfn
	  TCLLIBEXT=$tcllibext
	  break 3
	fi
      done
    done
  done
fi

# show if $TCLLIBFN wasn't found
if test "x${TCLLIBFN}" = "x"
then
  AC_MSG_RESULT(not found)
fi

AC_MSG_CHECKING(for Tcl header)

# attempt autodetect for $TCLINCFN if not set
if test ! "x${TCLINCFN}" = "x"
then
  AC_MSG_RESULT(using $TCLINC/$TCLINCFN)
else
  for headerpath in $tclheaderpaths
  do
    for tclheaderfn in $tclheadernames
    do
      if test -r "$headerpath/$tclheaderfn"
      then
	AC_MSG_RESULT(found $headerpath/$tclheaderfn)
	TCLINC=$headerpath
	TCLINCFN=$tclheaderfn
	break 2
      fi
    done
  done
  # FreeBSD hack ...
  if test "x${TCLINCFN}" = "x"
  then
    for tclversion in $tclversions
    do
      for headerpath in $tclheaderpaths
      do
	for tclheaderfn in $tclheadernames
	do
	  if test -r "$headerpath/tcl$tclversion/$tclheaderfn"
	  then
	    AC_MSG_RESULT(found $headerpath/tcl$tclversion/$tclheaderfn)
	    TCLINC=$headerpath/tcl$tclversion
	    TCLINCFN=$tclheaderfn
	    break 3
	  fi
	done
      done
    done
  fi
fi

# show if $TCLINCFN wasn't found
if test "x${TCLINCFN}" = "x"
then
  AC_MSG_RESULT(not found)
fi

# done looking, now either TCLLIBFN & TCLINCFN are both set, or we bail
if test "x${TCLLIBFN}" = "x" || test "x${TCLINCFN}" = "x"
then
  cat << 'EOF' >&2
configure: error:

  I can't find Tcl on this system.

  Eggdrop now requires Tcl to compile.  If you already have Tcl
  installed on this system, and I just wasn't looking in the right
  place for it, set the environment variables TCLLIB and TCLINC so
  I will know where to find 'libtcl.a' (or 'libtcl.so') and 'tcl.h'
  (respectively).  Then run 'configure' again.

  Read the README file if you don't know what Tcl is or how to get
  it and install it.

EOF
  exit 1
else

  AC_MSG_CHECKING(for Tcl version)

  for ver in $tclversions
  do
    TCLFOUND=`grep TCL_VERSION $TCLINC/$TCLINCFN | grep $ver | wc -l`
    if test ! $TCLFOUND = 0
    then
      TCLVER=$ver
      break
    fi
  done

  if test ! "x${TCLVER}" = "x"
  then
    AC_MSG_RESULT($TCLVER found!)
  else
    AC_MSG_RESULT(hmm... unknown version)
  fi

  if test $TCLFOUND = 1
  then
    TCL_REQS="$TCLLIB/lib$TCLLIBFN$TCLLIBEXT"
    TCL_LIBS="-L$TCLLIB -l$TCLLIBFN -lm"
  else
    cat << 'EOF' >&2
configure: error:

  Your Tcl version is much too old for eggdrop to use.
  I suggest you download and complie a more recent version.
  The most reliable current version is 8.2.1

EOF
    exit 1
  fi

  if test "x${TCLLIBEXT}" = "x.a"
  then
    cat << 'EOF' >&2
configure: warning:

  Your libtcl is not a shared library.
  configure will set default make type to static...

EOF
    DEFAULT_MAKE=static
  fi

fi # test TCLLIB

AC_SUBST(TCLINC)
AC_SUBST(TCLLIB)
AC_SUBST(TCLINCFN)
AC_SUBST(TCL_REQS)
AC_SUBST(TCL_LIBS)

# ---------- end of robey's tcl thingies

if test $need_dl = 1 && test "x${ac_cv_func_dlopen}" = "xno"
then
  if test "$LINUX" = "yes"
  then
    cat << 'EOF' >&2
configure: warning:

  Since you are on a Linux system, this has a known problem,
  I know a kludge for it,
EOF

    if test -r "/lib/libdl.so.1"
    then
      cat << 'EOF' >&2
  and you seem to have it, so we'll do that...

EOF
      AC_DEFINE(HAVE_DLOPEN)
      LIBS="/lib/libdl.so.1 $LIBS"
    else
      cat << 'EOF' >&2
  which you DONT seem to have... doh!
  perhaps you may still have the stuff lying around somewhere
  if you work out where it is, add it to your XLIBS= lines
  and #define HAVE_DLOPEN in config.h

  we'll proceed on anyway, but you probably won't be able
  to 'make eggdrop' but you might be able to make the
  static bot (I'll default your make to this version).

EOF
      DEFAULT_MAKE=static
    fi
  else
    cat << 'EOF' >&2
configure: warning:

  You don't seem to have libdl anywhere I can find it, this will
  prevent you from doing dynamic modules, I'll set your default
  make to static linking.

EOF
    DEFAULT_MAKE=static
  fi
fi

if test ! "x${GMAKE}" = "x"
then
  SET_MAKE="MAKE=gmake"
fi

if test -z "$DEST"
then
  DEST=\${prefix}
fi

AC_SUBST(DEST)
AC_SUBST(CP1)
AC_SUBST(CP2)
AC_SUBST(CP3)
AC_SUBST(EGGEXEC)
AC_SUBST(CC)
AC_SUBST(SHLIB_LD)
AC_SUBST(SHLIB_CC)
AC_SUBST(SHLIB_STRIP)
AC_SUBST(BEL_MOD_LD)
AC_SUBST(BEL_MOD_CC)
AC_SUBST(BEL_MOD_STRIP)
AC_SUBST(DLFLAGS)
AC_SUBST(DEFAULT_MAKE)
AC_OUTPUT(Makefile lush.h)

AC_MSG_RESULT()
AC_MSG_RESULT(Configure is done.)
AC_MSG_RESULT()
if test -f "./eggdrop"
then
  AC_MSG_RESULT(Type 'make clean' and then 'make' to create the bot.)
else
  AC_MSG_RESULT(Type 'make' to create the bot.)
fi
AC_MSG_RESULT()
